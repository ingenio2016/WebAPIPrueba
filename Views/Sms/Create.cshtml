@model WebAPIPrueba.Models.Sms

@{
    ViewBag.Title = "Crear SMS";
}

<h2>Módulo de envío masivo de SMS</h2>
<style>
    #incorrectos {
        color: darkred;
    }

    #correctos {
        color: darkgreen;
    }
</style>
@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        <h4>Nuevo Mensaje</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <p>
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                        <label class="control-label">Tipo de Usuario</label>
                        @Html.DropDownList("userId", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                        <label class="control-label">Usuario</label>
                        @Html.DropDownList("ReferId", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>

            </div>
        </p>
        <p>
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                        <label class="control-label">Comunas</label>
                        @Html.DropDownList("Comuna", null, htmlAttributes: new { @class = "form-control", @style = "background-color:#f5f5f5" })
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                        <label class="control-label">Lugar de Votación</label>
                        @Html.DropDownList("VotingPlaceId", null, htmlAttributes: new { @class = "form-control", @style = "background-color:#f5f5f5" })
                    </div>
                </div>

            </div>
        </p>
        <p>
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                        <input style="background-color:#000099;border-radius:25px" type="button" value="Buscar" class="btn btn-info btn-md" id="searchContacts" />
                    </div>
                </div>

            </div>
        </p>

        <br /><hr />

        <div class="form-group">
            <div class="col-md-3">
                <label class="control-label">Total Destinatarios</label>
                <input type="text" name="correctos" id="correctos" class="form-control" value="" readonly="readonly" />
                @Html.HiddenFor(model => model.To, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                <label class="control-label">Total Contactos excluídos</label>
                <input type="text" name="correctos" id="incorrectos" class="form-control" value="" readonly="readonly" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label" })
                <textarea class="form-control" name="Message" id="Message"></textarea>
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })<br />
                <div id="character_count"></div>
                <div id="messages_count"></div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input style="background-color:#000099;border-radius:25px" type="submit" id="btn_send" value="Guardar" class="btn btn-primary btn-sm" />
                @Html.ActionLink("Volver al Listado", "Index", new { }, new { @class = "btn btn-success btn-sm", @style = "background-color:#333334;border-radius:25px" })
            </div>
        </div>
    </div>

    <script src="@Url.Content("~/Scripts/tinymce/tinymce.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/JHomeIndex.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
                $("#userId").change(function () {
                    $("#ReferId").empty();
                    $("#ReferId").append('<option value="0">[Seleccione un Usuario]</option>');
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetPerfil")',
                        dataType: 'json',
                        data: { userId: $("#userId").val() },
                        success: function (data) {
                            $.each(data, function (i, data) {
                                $("#ReferId").append('<option value="'
                                 + data.ReferId + '">'
                                 + data.FullName + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('No se encontraron usuarios' + ex);
                        }
                    });
                    return false;
                })
            });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            var contacts = [];
            var errorContacts = [];
                $("#searchContacts").click(function () {
                    $('body').loading({
                        theme: 'dark',
                        message: 'Consultando Votantes ...'
                    });
                    var data = {
                        user: $("#userId option:selected").val(),
                        refer: $("#ReferId option:selected").val(),
                        comuna: $("#Comuna option:selected").val(),
                        votacion: $("#VotingPlaceId option:selected").text()
                    };
                    console.log(data);
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("SearchVoters")',
                        dataType: 'json',
                        data: data,
                        success: function (data) {
                            console.log(data);
                            if (data.length > 0) {
                                _.forEach(data, function (item) {
                                    if (isNaN(item.Phone)) {
                                        errorContacts.push(item);
                                    } else {
                                        if (item.Phone != null) {
                                            //Elimino espacios en blanco
                                            item.Phone = item.Phone.replace(/\s/g, "");
                                            if (item.Phone.length == 10) {
                                                var indicador = item.Phone.substring(0, 3);
                                                if (indicador == "300" || indicador == "301" || indicador == "302" || indicador == "303" || indicador == "304" || indicador == "305" || indicador == "310" || indicador == "311" || indicador == "312" || indicador == "313" || indicador == "314" || indicador == "315" || indicador == "316" || indicador == "317" || indicador == "318" || indicador == "319" || indicador == "320" || indicador == "321" || indicador == "322" || indicador == "323" || indicador == "350" || indicador == "351") {
                                                    contacts.push(item);
                                                } else {
                                                    errorContacts.push(item);
                                                }
                                            } else {
                                                errorContacts.push(item);
                                            }
                                        } else {
                                            errorContacts.push(item);
                                        }
                                    }
                                })
                            }
                            console.log(contacts);
                            console.log(errorContacts);

                            $('body').loading('stop');
                            $("#correctos").val(contacts.length + " contactos");
                            $("#incorrectos").val(errorContacts.length + " contactos");
                            $("#To").val(JSON.stringify(contacts));
                        },
                        error: function (ex) {
                            $('body').loading('stop');
                        }
                    });
                    return false;
                })

                $("#btn_send").click(function () {
                    $('body').loading({
                        theme: 'dark',
                        message: 'Enviando Correos. Por favor espere ...'
                    });

                    var body = tinymce.get("Message").getBody();
                    var message = tinymce.trim(body.innerText);

                    if (message.length > 0) {
                        var dataMessage = {
                            contacts: contacts,
                            body: message
                        }

                        console.log(dataMessage);
                    } else {
                        alert("Debe redactar un mensaje");
                        return false;
                    }                   
                   

                    setTimeout(() => {
                        $('body').loading('stop');
                    }, 5000)
                })
            });
    </script>
@*}*@
