@model PagedList.IPagedList<WebAPIPrueba.Models.Voter>

@using PagedList.Mvc;
@{
    ViewBag.Title = "Votantes";
    WebAPIPrueba.Models.WebApiPruebaContext db = new WebAPIPrueba.Models.WebApiPruebaContext();
    var list = db.Voters.ToList();
}
<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
<link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="stylesheet" />
<script type="text/javascript">
        $(function () {
            $("#Document").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Home/Buscar/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfCustomer").val(i.item.val);
                },
                minLength: 1
            });
        });
</script>


<div class="row">
    <div class="col-sm-6">
        <h2 style="color:#000099">Administración de Votantes</h2>
    </div>
    <div class="col-sm-6">
        <p style="text-align:right">
            <br />
            @Html.ActionLink("Nuevo Votante", "Create", new { }, new { @class = "btn btn-primary btn-md", @style = "background-color:#000099;border-radius:25px" })
        </p>
    </div>
</div>
@if (!User.IsInRole("Digitador"))
{
<p>
    @using (Html.BeginForm("Index", "Voters"))
    {
        <div class="form-horizontal">
            <div class="form-group">
                <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                    <label class="control-label">Filtrar por</label>
                    @Html.DropDownList("FilterId", null, htmlAttributes: new { @class = "form-control", @style = "background-color:#f5f5f5" })
                </div>
                <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                    <label class="control-label">Comunas</label>
                    @Html.DropDownList("Comuna", null, htmlAttributes: new { @class = "form-control", @style = "background-color:#f5f5f5" })
                </div>
                <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                    <label class="control-label">Lugar de Votación</label>
                    @Html.DropDownList("VotingPlaceId", null, htmlAttributes: new { @class = "form-control", @style = "background-color:#f5f5f5" })
                </div>
                <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                    <label class="control-label"><i style="color:#000099" class="fa fa-play" aria-hidden="true"></i>Nombre o Documento de identidad</label>
                    <input style="border-radius:25px" type="text" class="form-control" id="Document" name="Document" value="" />
                    <input type="hidden" id="hfCustomer" name="CustomerId" /><br />
                </div>
                <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                    <label style="visibility:hidden" class="control-label">Buscar</label><br />
                    <input style="background-color:#000099;border-radius:25px" type="submit" value="Buscar" class="btn btn-info btn-md" />
                </div>
            </div>

        </div>
    }
</p>
<hr />
<h3>Total Votantes: @list.Count</h3>
<div class="table-responsive">
    <table class="table table-striped">
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().FullName)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().UserName)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Phone)
            </th>

            <th>
                Hoja de Vida
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            WebAPIPrueba.Models.HojaVida hv = new WebAPIPrueba.Models.HojaVida();
            if (item.userId > 0)
            {
                if (item.userId == 1)
                {
                    var boss = db.Bosses.Where(b => b.Document == item.Document).FirstOrDefault();
                    if (boss != null)
                    {
                        hv = db.HojaVidas.Where(h => h.RolId == 1 && h.UserId == boss.BossId).FirstOrDefault();
                    }
                }
                if (item.userId == 2)
                {
                    var link = db.Links.Where(b => b.Document == item.Document).FirstOrDefault();
                    if (link != null)
                    {
                        hv = db.HojaVidas.Where(h => h.RolId == 2 && h.UserId == link.LinkId).FirstOrDefault();
                    }
                }
                if (item.userId == 3)
                {
                    var coor = db.Coordinators.Where(b => b.Document == item.Document).FirstOrDefault();
                    if (coor != null)
                    {
                        hv = db.HojaVidas.Where(h => h.RolId == 3 && h.UserId == coor.CoordinatorId).FirstOrDefault();
                    }
                }
                if (item.userId == 4)
                {
                    var leader = db.Leaders.Where(b => b.Document == item.Document).FirstOrDefault();
                    if (leader != null)
                    {
                        hv = db.HojaVidas.Where(h => h.RolId == 4 && h.UserId == leader.LeaderId).FirstOrDefault();
                    }
                }
                if (item.userId == 5)
                {
                    hv = db.HojaVidas.Where(h => h.RolId == 5 && h.UserId == item.VoterId).FirstOrDefault();
                }
            }
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>

                <td>
                    @if (hv != null)
                    {
                        <a class="btn btn-link" href="@Url.Content(hv.Path)" target="_blank"><i class="fa fa-download" aria-hidden="true"></i> Descargar</a>
                    }
                </td>

                <td>
                    <div class="dropdown">
                        <a href="#" style="background-color:#000099" class="btn btn-success dropdown-toggle" data-toggle="dropdown">Opciones<b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li><p><i class="fa fa-pencil-square-o" aria-hidden="true"></i>@Html.ActionLink(" Editar", "Edit", new { id = item.VoterId }, new { @style = "color:black" })</p></li>
                            <li><p><i class="fa fa-list-alt" k4aria-hidden="true"></i>@Html.ActionLink(" Detalles", "Details", new { id = item.VoterId }, new { @style = "color:black" })</p></li>
                            <li><p><i class="fa fa-trash-o" aria-hidden="true"></i>@Html.ActionLink(" Borrar", "Delete", new { id = item.VoterId }, new { @style = "color:black" })</p></li>
                            <li><p><i class="fa fa-cloud-upload" aria-hidden="true"></i>@Html.ActionLink(" Cargar HV", "CargarHojaVida", new { id = item.VoterId }, new { @style = "color:black" })</p></li>
                        </ul>
                    </div>
                </td>
            </tr>
        }

    </table>
    Página: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber), De: @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder =
        ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter,
    FilterId = ViewBag.uno,
    Comuna = ViewBag.dos,
    VotingPlaceId = ViewBag.tres
}))

    <p>
        @if (User.IsInRole("User") || User.IsInRole("Secretario"))
    {
        using (Html.BeginForm("Index", "Voters"))
        {
            <a class="btn btn-success btn-md" style="background-color:#000099;border-radius:25px" target="_blank" href='@Url.Action("VoterReport", "Voters", new { filtro = ViewBag.uno, communa = ViewBag.dos, votacion = ViewBag.tres, type = 1})'><span class="glyphicon glyphicon-print"></span>Descargar Excel</a>
            <a class="btn btn-success btn-md" style="background-color:#000099;border-radius:25px" target="_blank" href='@Url.Action("VoterReport", "Voters", new { filtro = ViewBag.uno, communa = ViewBag.dos, votacion = ViewBag.tres, type = 2})'><span class="glyphicon glyphicon-print"></span>Descargar PDF</a>

    }
}
    </p>
</div>
}